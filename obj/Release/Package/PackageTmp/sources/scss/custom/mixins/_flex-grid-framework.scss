// CSS Flex Grid Framework

@mixin make-shell($gutter: 30px) {
  margin-right: auto;
  margin-left: auto;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);
}

@mixin make-range($gutter: 30px) {
  margin-left: ceil(($gutter / -2));
  margin-right: floor(($gutter / -2));
}

@mixin make-cell-spacing($gutter: 30px) {
  padding-left: ceil(($gutter / 2));
  padding-right: floor(($gutter / 2));
}

@mixin make-cell($resolution, $count: 12) {
  .col-#{$resolution}-preffix-0 {
    margin-left: 0%;
  }

  @for $i from 1 through $count {
    .col-#{$resolution}-#{$i} {
      flex-basis: percentage($i / $count);
    }

    .col-#{$resolution}-preffix-#{$i} {
      margin-left: percentage($i / $count);
    }

    .col-#{$resolution}-push-#{$i} {
      order: $i;
    }
  }

  .col-#{$resolution}-1-5 {
    flex-basis: percentage(0.2);
  }
}

@mixin make-fallback($resolution, $count: 12) {
  @for $i from 1 through $count {
    .col-sm-#{$i}{
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count);
    }
  }

  .col-sm-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-md-#{$i}{
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count);
    }
  }

  .col-md-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-lg-#{$i}{
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count);
    }
  }

  .col-lg-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-xl-#{$i} {
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count);
    }
  }

  .col-xl-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  [class*="cell-xs-preffix-"],
  [class*="cell-sm-preffix-"],
  [class*="cell-md-preffix-"],
  [class*="cell-lg-preffix-"]{
    margin-left: auto;
  }
}

@mixin make-grid-system($resolution, $cell-count) {
  .row-#{$resolution}-center {
    justify-content: center;
  }

  .row-#{$resolution}-left {
    justify-content: flex-start;
  }

  .row-#{$resolution}-right {
    justify-content: flex-end;
  }

  .row-#{$resolution}-justify {
    justify-content: space-between;
  }

  .row-#{$resolution}-around {
    justify-content: space-around;
  }

  .row-#{$resolution}-top {
    align-items: flex-start;
  }

  .row-#{$resolution} {
    flex-direction: row;
  }

  .row-#{$resolution}-reverse {
    flex-direction: row-reverse;
  }

  .row-#{$resolution}-middle {
    align-items: center;
  }

  .row-#{$resolution}-bottom {
    align-items: flex-end;
  }

  .col-#{$resolution}-top {
    align-self: flex-start;
  }

  .col-#{$resolution}-middle {
    align-self: center;
  }

  .col-#{$resolution}-bottom {
    align-self: flex-end;
  }

  .row > {
    @include make-cell($resolution, $cell-count);
  }
}